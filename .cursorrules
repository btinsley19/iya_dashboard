# IYA Networking Tool - Cursor Rules

## Project Context
This is the IYA Networking Tool - a networking/dashboard platform for USC Iovine & Young Academy students with Instagram-style directory and AI-powered recommendations.

## Required Reading
Before starting any task, read these files for context:
- **PROJECT_OVERVIEW.md** - Complete project vision, features, and tech stack
- **Profile_Context.md** - Profile system implementation and features
- **Directory_Context.md** - Directory and public profile system
- **Database_Context.md** - Database schema and data management
- **CONTEXT_SUMMARY.md** - Quick reference guide
- **DEPLOYMENT_BEST_PRACTICES.md** - Type safety and deployment guidelines

## Key Context
- **Tech Stack**: Next.js 15.5.3, React 19, TypeScript, Tailwind CSS 4, Supabase
- **Current Status**: ✅ All major systems completed and functional
- **Database**: PostgreSQL with 145 IYA classes, comprehensive schema
- **Design**: USC theme with cardinal red (#990000) and gold (#FFCC00)
- **Authentication**: Supabase Auth with user approval system

## System Status ✅ COMPLETED

### Profile System
- ✅ Real user data integration (no mock data)
- ✅ Skills management with proficiency levels
- ✅ Classes system with 145 IYA courses (IDSN, ACAD)
- ✅ Projects management with technologies
- ✅ File uploads (resume/avatar) via Supabase Storage
- ✅ Organizations management (USC/non-USC)
- ✅ Search-based class selection interface

### Directory System
- ✅ Instagram-style carousel interface
- ✅ AI-powered recommendations with match scoring
- ✅ Advanced search and filtering
- ✅ Public profile pages with classes display
- ✅ Multi-criteria filtering (skills, classes, year, cohort)

### Database System
- ✅ Complete PostgreSQL schema with relationships
- ✅ 145 IYA classes imported from CSV data
- ✅ Row Level Security (RLS) policies
- ✅ File storage with Supabase Storage
- ✅ Optimized queries and indexing

## Development Patterns
- **Server Actions**: `src/lib/actions/` - All CRUD operations
- **UI Components**: `src/components/ui/` - Reusable components
- **Types**: `src/types/` - TypeScript interfaces
- **Database**: `supabase/migrations/` - Schema management
- **Scripts**: `scripts/` - Data import and testing utilities

## Key Files
- **Profile Page**: `src/app/profile/page.tsx` - User's own profile
- **Public Profile**: `src/app/profile/[id]/page.tsx` - View other profiles
- **Directory Page**: `src/app/directory/page.tsx` - Main discovery interface
- **Profile Actions**: `src/lib/actions/profile-actions.ts` - Profile CRUD
- **Directory Actions**: `src/lib/actions/directory-actions.ts` - Directory data

## Recent Achievements
- ✅ **Classes System**: 145 IYA courses with search interface
- ✅ **Public Profiles**: Classes display on public profile pages
- ✅ **Database Integration**: Complete data flow from UI to database
- ✅ **File Uploads**: Resume and avatar upload functionality
- ✅ **Context Documentation**: Clean, organized documentation

## Development Guidelines
- Use optimistic updates for better UX
- Follow USC design system and accessibility guidelines
- Implement proper error handling with rollback
- **STRICT TYPE SAFETY**: NO `any` types allowed - use proper interfaces
- Run `npm run type-check` frequently during development
- Run `npm run build` before deploying to catch type errors early
- Test with demo mode when database not configured
- Follow existing patterns for consistency

## Future Development Areas
- **Connection System**: Direct user-to-user connections
- **Messaging**: In-app messaging between users
- **Events**: Event creation and management
- **Advanced AI**: Enhanced recommendation algorithms
- **Social Features**: Like, follow, and interaction systems
